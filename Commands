#1. How many transactions were completed during each marketing campaign?
select campaign_name , count(transaction_id)  as total_transactions from marketing_campaigns
inner join transactions
on
marketing_campaigns.product_id=transactions.product_id
group by campaign_name 
order by total_transactions desc ;

#2)Which product had the highest sales quantity?
select product_name , sum(quantity) as highest_sales_quantity from  sustainable_clothing
join transactions
on 
sustainable_clothing.product_id=transactions.product_id
group by product_name 
order by highest_sales_quantity desc
limit 1;

#3. What is the total revenue generated from each marketing campaign?
select campaign_name , round(sum(price*quantity)) as total_revenue_generated from sustainable_clothing
join marketing_campaigns 
on
sustainable_clothing.product_id=marketing_campaigns.product_id
join transactions
on
marketing_campaigns.product_id=transactions.product_id
group by campaign_name
order by total_revenue_generated desc ;

#4. What is the top-selling product category based on the total revenue generated?
select category , round(sum(price*quantity)) as total_revenue_generated from sustainable_clothing
join transactions
on
sustainable_clothing.product_id=transactions.product_id
group by  category 
order by total_revenue_generated desc
limit 1;

#5. Which products had a higher quantity sold compared to the average quantity sold?
select product_name , sum(quantity) as higher_quantity_sold from sustainable_clothing
join transactions
on
sustainable_clothing.product_id=transactions.product_id
group by product_name 
having sum(quantity)> (select avg(quantity) from transactions)
order by higher_quantity_sold desc ;

#6. What is the average revenue generated per day during the marketing campaigns?
select campaign_name , day(purchase_date) as per_day , avg(price*quantity) as avg_revenue from sustainable_clothing
join marketing_campaigns
on
sustainable_clothing.product_id=marketing_campaigns.product_id
join transactions
on
marketing_campaigns.product_id=transactions.product_id
where purchase_date between  start_date and end_date
group by campaign_name , day(purchase_date)
order by avg_revenue desc;

#7. What is the percentage contribution of each product to the total revenue?
SELECT
    product_name,
    price,
    SUM(price * quantity) / (SELECT SUM(price * quantity) FROM transactions) * 100 AS percentage_contribution
FROM
    sustainable_clothing
JOIN
    transactions ON sustainable_clothing.product_id = transactions.product_id
GROUP BY
    product_name, price
ORDER BY
    percentage_contribution DESC;


#10. Rank the products by their average daily quantity sold:::
select product_name , avg(quantity) as average_daily_quantity_sold , rank() over (order by avg(quantity) desc) as product_rank
from sustainable_clothing
join transactions
on
sustainable_clothing.product_id=transactions.product_id
group by product_name 
order by average_daily_quantity_sold  desc;
